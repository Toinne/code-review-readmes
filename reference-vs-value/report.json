{"path":"./","status":2,"time":"2020-03-03T12:07:36.485Z","files":[{"path":"./comparing.js","status":2,"source":"// comparing objects and arrays with === is based on reference\n// comparisons are true when they reference the same thing in memory\n// psst. JS Tutor will help a lot with this example\n\n// examples with arrays\n\nconst arrayOne = ['hi', 'bye'];\nconst alsoArrayOne = arrayOne;\nconsole.assert(alsoArrayOne === arrayOne, 'alsoArrayOne === arrayOne');\nconsole.assert(alsoArrayOne[0] === arrayOne[0], 'alsoArrayOne[0] === arrayOne[0]');\nconsole.assert(alsoArrayOne[1] === arrayOne[1], 'alsoArrayOne[1] === arrayOne[1]');\n\n// two arrays with the same values do not compare to true\nconst arrayTwo = ['hi', 'bye'];\nconsole.assert(arrayTwo !== arrayOne, 'arrayTwo !== arrayOne');\nconsole.assert(arrayTwo[0] === arrayOne[0], 'arrayTwo[0] === arrayOne[0]');\nconsole.assert(arrayTwo[1] === arrayOne[1], 'arrayTwo[1] === arrayOne[1]');\n\nalsoArrayOne.push('mega');\nconsole.assert(arrayTwo[2] === undefined, 'arrayTwo does not change when arrayOne does');\narrayTwo.push('huh?');\nconsole.assert(arrayOne[2] === undefined, 'arrayOne does not change when arrayTwo does');\n\n// examples with objects\n\nconst objectOne = { first: 'hi', second: 'bye' };\nconst alsoObjectOne = objectOne;\nconsole.assert(alsoObjectOne === objectOne, 'alsoObjectOne === objectOne');\nconsole.assert(alsoObjectOne.first === objectOne.first, 'alsoObjectOne.first === objectOne.first');\nconsole.assert(alsoObjectOne.second === objectOne.second, 'alsoObjectOne.second === objectOne.second');\n\n\n// two objects with the same values do not compare to true\nconst objectTwo = { first: 'hi', second: 'bye' };\nconsole.assert(objectTwo !== objectOne, 'objectTwo !== objectOne');\nconsole.assert(objectTwo.first === objectOne.first, 'objectTwo.first === objectOne.first');\nconsole.assert(objectTwo.second === objectOne.second, 'objectTwo.second === objectOne.second');\n\n\nalsoObjectOne.m = 'ega';\nconsole.assert(alsoObjectTwo.m === undefined, 'objectTwo does not change when objectOne does');\nobjectTwo.h = 'uh?';\nconsole.assert(objectOne.h === undefined, 'objectOne does not change when objectTwo does');\n","report":[{"error":"Error: Cannot find module './comparing.js'\nRequire stack:\n-  [...] /review.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:625:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:527:27)\n    at Module.require (internal/modules/cjs/loader.js:683:19)\n    at require (internal/modules/cjs/helpers.js:16:16)\n    at evaluateFile ( [...] /review.js:78:5)\n    at  [...] /review.js:99:24\n    at Array.map (<anonymous>)\n    at evaluateDirectory ( [...] /review.js:99:8)\n    at Object.<anonymous> ( [...] /review.js:136:20)\n    at Module._compile (internal/modules/cjs/loader.js:777:30)"}]},{"path":"./const-reference-types.js","status":2,"source":"// using const with arrays and objects is like locking a bag\n//  someone can't steal your bag because it's locked in place\n//  but they can still take things out or put things in\n\nconst constantObject = { a: 2 };\nconstantObject.a = 3; // no error\nconstantObject.b = 4; // no error\nconstantObject = { a: 3 }; // error!\n\nconst constantArray = [4];\nconstantArray[0] = 6; // no error\nconstantArray[1] = 7; // no error\nconstantArray = [6]; // error!\n","report":[{"error":"Error: Cannot find module './const-reference-types.js'\nRequire stack:\n-  [...] /review.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:625:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:527:27)\n    at Module.require (internal/modules/cjs/loader.js:683:19)\n    at require (internal/modules/cjs/helpers.js:16:16)\n    at evaluateFile ( [...] /review.js:78:5)\n    at  [...] /review.js:99:24\n    at Array.map (<anonymous>)\n    at evaluateDirectory ( [...] /review.js:99:8)\n    at Object.<anonymous> ( [...] /review.js:136:20)\n    at Module._compile (internal/modules/cjs/loader.js:777:30)"}]},{"path":"./sharing-a-reference.js","status":2,"source":"// primitives are stored \"by value\", connected to one variable\n//  assigning a primitive to a new variable makes a copy of it\n//  modifying the new variable does not change the old one\n\nconst number5 = 5;\nlet new5 = number5;\nnew5 = new5 + 1;\nconsole.assert(new5 === 6, 'new5 stores has been modified');\nconsole.assert(number5 === 5, 'original variable was not modified');\n\n\n// objects & arrays are stored by reference\n//  both variables reference the same object in memory\n//  modifying on variable changes both\n\nlet objectOne = {};\nconst objectTwo = objectOne;\nobjectTwo.x = 6;\nconsole.assert(objectOne.x === 6, 'objectOne has changed after modifying objectTwo');\nobjectOne.y = 'hi!';\nconsole.assert(objectTwo.y === 'hi!', 'objectTwo has changed after modifying objectOne');\nobjectOne = undefined;\nconsole.assert(objectTwo !== undefined, 'reassigning objectOne does not affect objectTwo');\n\nlet arrayOne = [];\nconst arrayTwo = arrayOne;\narrayTwo[0] = 7;\nconsole.assert(arrayOne[0] === 7, 'arrayOne has changed after modifying arrayTwo');\narrayOne[1] = 'bye!';\nconsole.assert(arrayTwo[1] === 'bye!', 'arrayTwo has changed after modifying arrayOne');\narrayOne = undefined;\nconsole.assert(arrayTwo !== undefined, 'reassigning arrayOne does not affect arrayTwo');\n\n\n","report":[{"error":"Error: Cannot find module './sharing-a-reference.js'\nRequire stack:\n-  [...] /review.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:625:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:527:27)\n    at Module.require (internal/modules/cjs/loader.js:683:19)\n    at require (internal/modules/cjs/helpers.js:16:16)\n    at evaluateFile ( [...] /review.js:78:5)\n    at  [...] /review.js:99:24\n    at Array.map (<anonymous>)\n    at evaluateDirectory ( [...] /review.js:99:8)\n    at Object.<anonymous> ( [...] /review.js:136:20)\n    at Module._compile (internal/modules/cjs/loader.js:777:30)"}]}],"dirs":[{"path":"./challenges/","status":2,"time":"2020-03-03T12:07:36.485Z","files":[{"path":"./challenges/array-1.js","status":2,"source":"console.log('\\n--- array challenge: 1 ---');\n// psst.  use JS Tutor & the debugger!\n\n\n; // declare and assign array1\n; // declare and assign array2\n\nconst areTheSameArray = array1 === array2;\nconst sameZeroValue = array1[0] === array2[0];\nconst zeroValueIsHi = array1[0] === 'hi';\nconsole.assert(areTheSameArray && sameZeroValue && zeroValueIsHi, 'Test 1');\n\n\n\nconst index = 1;\n// pass the next test\n\n\nconst arraysIndexAreSame = array1[index] === array2[index];\nconst array1IndexIsBye = array1[index] === 'bye';\nconsole.assert(arraysIndexAreSame && array1IndexIsBye, 'Test 2');\n","report":[{"error":"Error: Cannot find module './challenges/array-1.js'\nRequire stack:\n-  [...] /review.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:625:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:527:27)\n    at Module.require (internal/modules/cjs/loader.js:683:19)\n    at require (internal/modules/cjs/helpers.js:16:16)\n    at evaluateFile ( [...] /review.js:78:5)\n    at  [...] /review.js:99:24\n    at Array.map (<anonymous>)\n    at evaluateDirectory ( [...] /review.js:99:8)\n    at  [...] /review.js:104:19\n    at Array.map (<anonymous>)"}]},{"path":"./challenges/array-2.js","status":2,"source":"console.log('\\n--- array challenges: 2 ---');\n// psst.  use JS Tutor & the debugger!\n\n\n; // declare and assign array1\n; // declare and assign array2\n\nconst areDifferentArrays = array1 !== array2;\nconst sameZeroValue = array1[0] === array2[0];\nconst zeroValueIsHi = array1[0] === 'hi';\nconsole.assert(areDifferentArrays && sameZeroValue && zeroValueIsHi, 'Test 1');\n\nconst index = 1;\n// pass the last two asserts\n\nconst arraysIndexAreSame = array1[index] === array2[index];\nconst array1IndexIsBye = array1[index] === 'bye';\nconsole.assert(arraysIndexAreSame && array1IndexIsBye, 'Test 2');\n","report":[{"error":"Error: Cannot find module './challenges/array-2.js'\nRequire stack:\n-  [...] /review.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:625:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:527:27)\n    at Module.require (internal/modules/cjs/loader.js:683:19)\n    at require (internal/modules/cjs/helpers.js:16:16)\n    at evaluateFile ( [...] /review.js:78:5)\n    at  [...] /review.js:99:24\n    at Array.map (<anonymous>)\n    at evaluateDirectory ( [...] /review.js:99:8)\n    at  [...] /review.js:104:19\n    at Array.map (<anonymous>)"}]},{"path":"./challenges/object-1.js","status":2,"source":"console.log('\\n--- object challenges: 1 ---');\n// psst.  use JS Tutor & the debugger!\n\n\n; // declare and assign object1\n; // declare and assign object2\n\nconst areTheSameObject = object1 === object2;\nconst sameXValue = object1.x === object2.x;\nconst xValueIsHi = object1.x === 'hi';\nconsole.assert(areTheSameObject && sameXValue && xValueIsHi, 'Test 1');\n\n\nconst key = 'y';\n// pass the next tests\n\nconst objectsKeyAreSame = object1[key] === object2[key];\nconst object1YIsBye = object1.y === 'bye';\nconsole.assert(objectsKeyAreSame && objectsKeyAreSame, 'Test 2');\n","report":[{"error":"Error: Cannot find module './challenges/object-1.js'\nRequire stack:\n-  [...] /review.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:625:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:527:27)\n    at Module.require (internal/modules/cjs/loader.js:683:19)\n    at require (internal/modules/cjs/helpers.js:16:16)\n    at evaluateFile ( [...] /review.js:78:5)\n    at  [...] /review.js:99:24\n    at Array.map (<anonymous>)\n    at evaluateDirectory ( [...] /review.js:99:8)\n    at  [...] /review.js:104:19\n    at Array.map (<anonymous>)"}]},{"path":"./challenges/object-2.js","status":2,"source":"console.log('\\n--- object challenges: 2 ---');\n// psst.  use JS Tutor & the debugger!\n\n\n; // declare and assign object1\n; // declare and assign object2\n\nconst areNotTheSameObject = object1 !== object2;\nconst sameXValue = object1.x === object2.x;\nconst xValueIsHi = object1.x === 'hi';\nconsole.assert(areNotTheSameObject && sameXValue && xValueIsHi, 'Test 1');\n\n\nconst key = 'y';\n// pass the next tests\n\nconst objectsKeyAreSame = object1[key] === object2[key];\nconst object1YIsBye = object1.y === 'bye';\nconsole.assert(objectsKeyAreSame && object1YIsBye, 'Test 2');\n","report":[{"error":"Error: Cannot find module './challenges/object-2.js'\nRequire stack:\n-  [...] /review.js\n    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:625:15)\n    at Function.Module._load (internal/modules/cjs/loader.js:527:27)\n    at Module.require (internal/modules/cjs/loader.js:683:19)\n    at require (internal/modules/cjs/helpers.js:16:16)\n    at evaluateFile ( [...] /review.js:78:5)\n    at  [...] /review.js:99:24\n    at Array.map (<anonymous>)\n    at evaluateDirectory ( [...] /review.js:99:8)\n    at  [...] /review.js:104:19\n    at Array.map (<anonymous>)"}]}],"dirs":null}]}